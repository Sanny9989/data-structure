#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int coeff, exp;
    struct Node *next;
} Node;

Node* createNode(int coeff, int exp) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->coeff = coeff;
    newNode->exp = exp;
    newNode->next = NULL;
    return newNode;
}

void insertNode(Node **head, int coeff, int exp) {
    Node **current = head;
    while (*current && (*current)->exp > exp) 
        current = &(*current)->next;
    
    if (*current && (*current)->exp == exp) 
        (*current)->coeff += coeff;
    else {
        Node* newNode = createNode(coeff, exp);
        newNode->next = *current;
        *current = newNode;
    }
}

void printPolynomial(Node *head) {
    int first = 1;
    for (Node *temp = head; temp; temp = temp->next) {
        if (temp->coeff != 0) {
            if (!first && temp->coeff > 0) 
                printf(" + ");
            if (temp->exp == 0) 
                printf("%d", temp->coeff);
            else 
                printf("%dx^%d", temp->coeff, temp->exp);
            first = 0;
        }
    }
    printf("\n");
}

Node* addPolynomials(Node *poly1, Node *poly2) {
    Node *result = NULL;
    while (poly1 || poly2) {
        int coeff = 0, exp;
        if (poly1 && (!poly2 || poly1->exp >= poly2->exp)) {
            coeff += poly1->coeff;
            exp = poly1->exp;
            poly1 = poly1->next;
        }
        if (poly2 && (!poly1 || poly2->exp > poly1->exp)) {
            coeff += poly2->coeff;
            exp = poly2->exp;
            poly2 = poly2->next;
        }
        if (coeff != 0) 
            insertNode(&result, coeff, exp);
    }
    return result;
}

int main() {
    Node *poly1 = NULL, *poly2 = NULL;
    
    insertNode(&poly1, 3, 3);
    insertNode(&poly1, 4, 2);
    insertNode(&poly1, 2, 1);
    insertNode(&poly1, 1, 0);
    
    insertNode(&poly2, 5, 2);
    insertNode(&poly2, 3, 1);
    insertNode(&poly2, 1, 0);
    
    printf("Polynomial 1: ");
    printPolynomial(poly1);
    
    printf("Polynomial 2: ");
    printPolynomial(poly2);

    printf("Sum: ");
    printPolynomial(addPolynomials(poly1, poly2));

    return 0;
}
output;
Polynomial 1: 3x^3 + 4x^2 + 2x^1 + 1
Polynomial 2: 5x^2 + 3x^1 + 1
Sum: 3x^3 + 9x^2 + 5x^1 + 2
